{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","reverse","goods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGHT","length","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAzBD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAczB,OAZIJ,IAAaL,EAASW,UACxBD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGtDT,IAAaL,EAASgB,QACxBN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAGvDV,GACFG,EAAaF,UAGRE,EAOOQ,CAAkBjB,EAAiB,CAAEI,WAAUE,eAO7D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAaL,EAASW,WAEtCW,QAAS,kBAAMhB,EAAYN,EAASW,WANtC,iCAWA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAaL,EAASgB,SAEtCM,QAAS,kBAAMhB,EAAYN,EAASgB,SANtC,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QAAS,kBAAMd,GAASD,IAN1B,qBAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,mBACA,CAAE,WAAYhB,IAAaL,EAASI,OAASG,IAE/Ce,QA/CM,WACZhB,EAAYN,EAASI,MACrBI,GAAQ,IAuCJ,sBAYF,6BACE,6BACGC,EAAMc,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,cC7GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5e78b56.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGHT,\n}\n\ntype RearderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: RearderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortType === SortType.LENGHT) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, reverse] = useState(false);\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    reverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGHT },\n          )}\n          onClick={() => setSortType(SortType.LENGHT)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => reverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-danger',\n            { 'is-light': sortType === SortType.NONE && !isReversed },\n          )}\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}